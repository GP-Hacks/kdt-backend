syntax = "proto3";

import "google/protobuf/timestamp.proto";
option go_package = "github.com/GP-Hacks/commons/api/proto";

package api;

service ChatService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message SendMessageRequest {
  repeated Message messages = 1;
}

message Message {
  string role = 1;
  string content = 2;
}

message SendMessageResponse {
  string response = 1;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  bool is_healthy = 1;
}

service PlacesService {
  rpc GetPlaces(GetPlacesRequest) returns (GetPlacesResponse);
  rpc GetCategories(GetCategoriesRequest) returns (GetCategoriesResponse);
  rpc BuyTicket(BuyTicketRequest) returns (BuyTicketResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message GetPlacesRequest {
  double latitude = 1;
  double longitude = 2;
  string category = 3;
}

message GetPlacesResponse {
  repeated Place response = 1;
}

message Place {
  int32 id = 1;
  string category = 2;
  string description = 3;
  double latitude = 4;
  double longitude = 5;
  string location = 6;
  string name = 7;
  string tel = 8;
  string website = 9;
  int32 cost = 10;
  repeated string times = 11;
  repeated Photo photos = 12;
}

message Photo {
  string url = 1;
}

message GetCategoriesRequest {}

message GetCategoriesResponse {
  repeated string categories = 1;
}

message BuyTicketRequest {
  string token = 1;
  int32 place_id = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message BuyTicketResponse {
  string response = 1;
}

service CharityService {
  rpc GetCollections(GetCollectionsRequest) returns (GetCollectionsResponse);
  rpc GetCategories(GetCategoriesRequest) returns (GetCategoriesResponse);
  rpc Donate(DonateRequest) returns (DonateResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message GetCollectionsRequest {
  string category = 1;
}

message GetCollectionsResponse {
  repeated Collection response = 1;
}

message Collection {
  int32 id = 1;
  string category = 2;
  string name = 3;
  string description = 4;
  string organization = 5;
  string phone = 6;
  string website = 7;
  int32 goal = 8;
  int32 current = 9;
}

message DonateRequest {
  string token = 1;
  int32 collection_id = 2;
  int32 amount = 3;
}

message DonateResponse {
  string response = 1;
}


/*protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative api/proto/kdt.proto*/